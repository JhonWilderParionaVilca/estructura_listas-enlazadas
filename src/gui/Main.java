/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import javax.swing.JOptionPane;
import static javax.swing.JOptionPane.ERROR_MESSAGE;
import javax.swing.ListSelectionModel;
import listas.Estudiante;
import listas.ListaCircular;
import listas.ListaDoble;
import listas.ListaSimple;

/**
 *
 * @author bh
 */
public class Main extends javax.swing.JFrame {

    //inicializamos las listas manera global
    ListaSimple<Estudiante> estudiantes = new ListaSimple<>();
    ListaDoble<Estudiante> estudiantesD = new ListaDoble<>();
    ListaCircular<Estudiante> estudiantesC = new ListaCircular<>();
    /**
     * Creates new form Main
     */
    public Main() {
        initComponents();
        //para q solo se pueda seleccionar una sola fila jtable
        tableListaSimple.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        tableListaDoble.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        tableCircular.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        
    }
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        footer = new javax.swing.JLabel();
        Titulo = new javax.swing.JLabel();
        margenD = new javax.swing.JLabel();
        margenI = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        LSimple = new javax.swing.JPanel();
        Lista = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tableListaSimple = new javax.swing.JTable();
        metodos = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        botones = new javax.swing.JPanel();
        btnInsertarPrimero = new javax.swing.JButton();
        btnInsertarFinal = new javax.swing.JButton();
        btnEliminarPrimero = new javax.swing.JButton();
        btnEliminarFinal = new javax.swing.JButton();
        inputs = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        txtCodigo = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtNombre = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtApellido = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        txtEdad = new javax.swing.JTextField();
        buscado = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        btnEliminarBuscado = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        txtCodigoB = new javax.swing.JTextField();
        btnBuscar = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        btnInsertarAntes = new javax.swing.JButton();
        btnInsertarDespues = new javax.swing.JButton();
        btnEliminarAntes = new javax.swing.JButton();
        btnEliminarDespues = new javax.swing.JButton();
        LDoble = new javax.swing.JPanel();
        metodos1 = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        botones1 = new javax.swing.JPanel();
        btnInsertarPrimeroD = new javax.swing.JButton();
        btnInsertarFinalD = new javax.swing.JButton();
        btnEliminarPrimeroD = new javax.swing.JButton();
        btnEliminarFinalD = new javax.swing.JButton();
        inputs1 = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        txtCodigoD = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        txtNombreD = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        txtApellidoD = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        txtEdadD = new javax.swing.JTextField();
        buscado1 = new javax.swing.JPanel();
        jLabel17 = new javax.swing.JLabel();
        btnEliminarBuscadoD = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jPanel9 = new javax.swing.JPanel();
        jPanel10 = new javax.swing.JPanel();
        jLabel18 = new javax.swing.JLabel();
        txtCodigoBD = new javax.swing.JTextField();
        btnBuscarDoble = new javax.swing.JButton();
        btnEliminarDespuesD = new javax.swing.JPanel();
        btnInsertarAntesD = new javax.swing.JButton();
        btnInsertarDespuesD = new javax.swing.JButton();
        btnEliminarAntesD = new javax.swing.JButton();
        btnELiminarDespuesD = new javax.swing.JButton();
        Lista1 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        tableListaDoble = new javax.swing.JTable();
        LCircular = new javax.swing.JPanel();
        Lista2 = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        tableCircular = new javax.swing.JTable();
        metodos2 = new javax.swing.JPanel();
        jPanel12 = new javax.swing.JPanel();
        jLabel19 = new javax.swing.JLabel();
        botones2 = new javax.swing.JPanel();
        btnInsertarPrimeroC = new javax.swing.JButton();
        btnInsertarFinalC = new javax.swing.JButton();
        btnEliminarInicioC = new javax.swing.JButton();
        btnEliminarFinalC = new javax.swing.JButton();
        inputs2 = new javax.swing.JPanel();
        jLabel20 = new javax.swing.JLabel();
        txtCodigoC = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        txtNombreC = new javax.swing.JTextField();
        jLabel22 = new javax.swing.JLabel();
        txtApellidoC = new javax.swing.JTextField();
        jLabel23 = new javax.swing.JLabel();
        txtEdadC = new javax.swing.JTextField();
        buscado2 = new javax.swing.JPanel();
        jLabel24 = new javax.swing.JLabel();
        btnEliminarBuscadoC = new javax.swing.JButton();
        jPanel13 = new javax.swing.JPanel();
        jPanel14 = new javax.swing.JPanel();
        jPanel15 = new javax.swing.JPanel();
        jLabel25 = new javax.swing.JLabel();
        txtCodigoBC = new javax.swing.JTextField();
        btnBuscarC = new javax.swing.JButton();
        jPanel16 = new javax.swing.JPanel();
        btnInsertarAntesC = new javax.swing.JButton();
        btnInsertarDespuesC = new javax.swing.JButton();
        btnEliminarAntesC = new javax.swing.JButton();
        btnEliminarDespuesC = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setLayout(new java.awt.BorderLayout(5, 5));

        footer.setBackground(new java.awt.Color(0, 0, 0));
        footer.setForeground(new java.awt.Color(255, 255, 255));
        footer.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        footer.setText("wilderPariona");
        footer.setOpaque(true);
        jPanel1.add(footer, java.awt.BorderLayout.PAGE_END);

        Titulo.setBackground(new java.awt.Color(204, 204, 204));
        Titulo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Titulo.setText("ESTRUCTURA DE DATOS LISTAS ENLAZADAS");
        Titulo.setOpaque(true);
        jPanel1.add(Titulo, java.awt.BorderLayout.PAGE_START);

        margenD.setText("     ");
        jPanel1.add(margenD, java.awt.BorderLayout.LINE_START);

        margenI.setText("     ");
        jPanel1.add(margenI, java.awt.BorderLayout.LINE_END);

        jTabbedPane1.setBackground(new java.awt.Color(204, 204, 204));

        LSimple.setLayout(new java.awt.BorderLayout(5, 5));

        Lista.setLayout(new java.awt.BorderLayout(5, 5));

        tableListaSimple = new javax.swing.JTable(){
            public boolean isCellEditable(int rowIndex, int colIndex){
                return false;
            }
        };
        tableListaSimple.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
            },
            new String [] {
                "CÃ³digo", "Nombre", "Apellido", "Edad"
            }
        ));
        tableListaSimple.setShowVerticalLines(false);
        tableListaSimple.getTableHeader().setReorderingAllowed(false);
        tableListaSimple.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tableListaSimpleFocusGained(evt);
            }
        });
        tableListaSimple.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableListaSimpleMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(tableListaSimple);

        Lista.add(jScrollPane3, java.awt.BorderLayout.CENTER);

        LSimple.add(Lista, java.awt.BorderLayout.PAGE_END);

        metodos.setLayout(new java.awt.GridLayout(1, 2, 5, 5));

        jPanel6.setLayout(new java.awt.BorderLayout());

        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("INSERTAR");
        jPanel6.add(jLabel5, java.awt.BorderLayout.PAGE_START);

        botones.setLayout(new java.awt.GridLayout(2, 2, 5, 5));

        btnInsertarPrimero.setText("Insertar Inicio");
        btnInsertarPrimero.setEnabled(false);
        btnInsertarPrimero.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInsertarPrimeroActionPerformed(evt);
            }
        });
        botones.add(btnInsertarPrimero);

        btnInsertarFinal.setText("Insertar Final");
        btnInsertarFinal.setEnabled(false);
        btnInsertarFinal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInsertarFinalActionPerformed(evt);
            }
        });
        botones.add(btnInsertarFinal);

        btnEliminarPrimero.setText("Eliminar Inicio");
        btnEliminarPrimero.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarPrimeroActionPerformed(evt);
            }
        });
        botones.add(btnEliminarPrimero);

        btnEliminarFinal.setText("Eliminar Final");
        btnEliminarFinal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarFinalActionPerformed(evt);
            }
        });
        botones.add(btnEliminarFinal);

        jPanel6.add(botones, java.awt.BorderLayout.PAGE_END);

        inputs.setLayout(new java.awt.GridLayout(4, 2, 4, 5));

        jLabel6.setText("CÃ³digo");
        inputs.add(jLabel6);

        txtCodigo.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        txtCodigo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCodigoActionPerformed(evt);
            }
        });
        txtCodigo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCodigoKeyTyped(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtCodigoKeyReleased(evt);
            }
        });
        inputs.add(txtCodigo);

        jLabel7.setText("Nombre");
        inputs.add(jLabel7);

        txtNombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNombreActionPerformed(evt);
            }
        });
        txtNombre.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNombreKeyTyped(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtNombreKeyReleased(evt);
            }
        });
        inputs.add(txtNombre);

        jLabel8.setText("Apellido");
        inputs.add(jLabel8);

        txtApellido.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtApellidoKeyTyped(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtApellidoKeyReleased(evt);
            }
        });
        inputs.add(txtApellido);

        jLabel9.setText("Edad");
        inputs.add(jLabel9);

        txtEdad.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtEdadKeyTyped(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtEdadKeyReleased(evt);
            }
        });
        inputs.add(txtEdad);

        jPanel6.add(inputs, java.awt.BorderLayout.CENTER);

        metodos.add(jPanel6);

        buscado.setLayout(new java.awt.BorderLayout(5, 5));

        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel10.setText("Elemento Buscado");
        buscado.add(jLabel10, java.awt.BorderLayout.PAGE_START);

        btnEliminarBuscado.setText("Eliminar Elemento Buscado");
        btnEliminarBuscado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarBuscadoActionPerformed(evt);
            }
        });
        buscado.add(btnEliminarBuscado, java.awt.BorderLayout.PAGE_END);

        jPanel2.setLayout(new java.awt.GridLayout(2, 0, 0, 5));

        jPanel3.setLayout(new java.awt.GridLayout(2, 0, 0, 5));

        jPanel7.setLayout(new java.awt.GridLayout(1, 2, 5, 5));

        jLabel11.setText("CÃ³digo");
        jPanel7.add(jLabel11);

        txtCodigoB.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                txtCodigoBInputMethodTextChanged(evt);
            }
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
        });
        txtCodigoB.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCodigoBKeyTyped(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtCodigoBKeyReleased(evt);
            }
        });
        jPanel7.add(txtCodigoB);

        jPanel3.add(jPanel7);

        btnBuscar.setText("Buscar");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });
        jPanel3.add(btnBuscar);

        jPanel2.add(jPanel3);

        jPanel4.setLayout(new java.awt.GridLayout(2, 2, 5, 5));

        btnInsertarAntes.setText("Insertar Antes");
        btnInsertarAntes.setEnabled(false);
        btnInsertarAntes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInsertarAntesActionPerformed(evt);
            }
        });
        jPanel4.add(btnInsertarAntes);

        btnInsertarDespues.setText("Insertar Despues");
        btnInsertarDespues.setEnabled(false);
        btnInsertarDespues.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInsertarDespuesActionPerformed(evt);
            }
        });
        jPanel4.add(btnInsertarDespues);

        btnEliminarAntes.setText("Eliminar Antes");
        btnEliminarAntes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarAntesActionPerformed(evt);
            }
        });
        jPanel4.add(btnEliminarAntes);

        btnEliminarDespues.setText("Eliminar Despues");
        btnEliminarDespues.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarDespuesActionPerformed(evt);
            }
        });
        jPanel4.add(btnEliminarDespues);

        jPanel2.add(jPanel4);

        buscado.add(jPanel2, java.awt.BorderLayout.CENTER);

        metodos.add(buscado);

        LSimple.add(metodos, java.awt.BorderLayout.CENTER);

        jTabbedPane1.addTab("Lista Simple", LSimple);

        LDoble.setLayout(new java.awt.BorderLayout());

        metodos1.setLayout(new java.awt.GridLayout(1, 2, 5, 5));

        jPanel8.setLayout(new java.awt.BorderLayout());

        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel12.setText("INSERTAR");
        jPanel8.add(jLabel12, java.awt.BorderLayout.PAGE_START);

        botones1.setLayout(new java.awt.GridLayout(2, 2, 5, 5));

        btnInsertarPrimeroD.setText("Insertar Inicio");
        btnInsertarPrimeroD.setEnabled(false);
        btnInsertarPrimeroD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInsertarPrimeroDActionPerformed(evt);
            }
        });
        botones1.add(btnInsertarPrimeroD);

        btnInsertarFinalD.setText("Insertar Final");
        btnInsertarFinalD.setEnabled(false);
        btnInsertarFinalD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInsertarFinalDActionPerformed(evt);
            }
        });
        botones1.add(btnInsertarFinalD);

        btnEliminarPrimeroD.setText("Eliminar Inicio");
        btnEliminarPrimeroD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarPrimeroDActionPerformed(evt);
            }
        });
        botones1.add(btnEliminarPrimeroD);

        btnEliminarFinalD.setText("Eliminar Final");
        btnEliminarFinalD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarFinalDActionPerformed(evt);
            }
        });
        botones1.add(btnEliminarFinalD);

        jPanel8.add(botones1, java.awt.BorderLayout.PAGE_END);

        inputs1.setLayout(new java.awt.GridLayout(4, 2, 4, 5));

        jLabel13.setText("CÃ³digo");
        inputs1.add(jLabel13);

        txtCodigoD.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        txtCodigoD.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCodigoDKeyTyped(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtCodigoDKeyReleased(evt);
            }
        });
        inputs1.add(txtCodigoD);

        jLabel14.setText("Nombre");
        inputs1.add(jLabel14);

        txtNombreD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNombreDActionPerformed(evt);
            }
        });
        txtNombreD.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNombreDKeyTyped(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtNombreDKeyReleased(evt);
            }
        });
        inputs1.add(txtNombreD);

        jLabel15.setText("Apellido");
        inputs1.add(jLabel15);

        txtApellidoD.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtApellidoDKeyTyped(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtApellidoDKeyReleased(evt);
            }
        });
        inputs1.add(txtApellidoD);

        jLabel16.setText("Edad");
        inputs1.add(jLabel16);

        txtEdadD.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtEdadDKeyTyped(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtEdadDKeyReleased(evt);
            }
        });
        inputs1.add(txtEdadD);

        jPanel8.add(inputs1, java.awt.BorderLayout.CENTER);

        metodos1.add(jPanel8);

        buscado1.setLayout(new java.awt.BorderLayout(5, 5));

        jLabel17.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel17.setText("Elemento Buscado");
        buscado1.add(jLabel17, java.awt.BorderLayout.PAGE_START);

        btnEliminarBuscadoD.setText("Eliminar Elemento Buscado");
        btnEliminarBuscadoD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarBuscadoDActionPerformed(evt);
            }
        });
        buscado1.add(btnEliminarBuscadoD, java.awt.BorderLayout.PAGE_END);

        jPanel5.setLayout(new java.awt.GridLayout(2, 0, 0, 5));

        jPanel9.setLayout(new java.awt.GridLayout(2, 0, 0, 5));

        jPanel10.setLayout(new java.awt.GridLayout(1, 2, 5, 5));

        jLabel18.setText("CÃ³digo");
        jPanel10.add(jLabel18);

        txtCodigoBD.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCodigoBDKeyTyped(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtCodigoBDKeyReleased(evt);
            }
        });
        jPanel10.add(txtCodigoBD);

        jPanel9.add(jPanel10);

        btnBuscarDoble.setText("Buscar");
        btnBuscarDoble.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarDobleActionPerformed(evt);
            }
        });
        jPanel9.add(btnBuscarDoble);

        jPanel5.add(jPanel9);

        btnEliminarDespuesD.setLayout(new java.awt.GridLayout(2, 2, 5, 5));

        btnInsertarAntesD.setText("Insertar Antes");
        btnInsertarAntesD.setEnabled(false);
        btnInsertarAntesD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInsertarAntesDActionPerformed(evt);
            }
        });
        btnEliminarDespuesD.add(btnInsertarAntesD);

        btnInsertarDespuesD.setText("Insertar Despues");
        btnInsertarDespuesD.setEnabled(false);
        btnInsertarDespuesD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInsertarDespuesDActionPerformed(evt);
            }
        });
        btnEliminarDespuesD.add(btnInsertarDespuesD);

        btnEliminarAntesD.setText("Eliminar Antes");
        btnEliminarAntesD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarAntesDActionPerformed(evt);
            }
        });
        btnEliminarDespuesD.add(btnEliminarAntesD);

        btnELiminarDespuesD.setText("Eliminar Despues");
        btnELiminarDespuesD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnELiminarDespuesDActionPerformed(evt);
            }
        });
        btnEliminarDespuesD.add(btnELiminarDespuesD);

        jPanel5.add(btnEliminarDespuesD);

        buscado1.add(jPanel5, java.awt.BorderLayout.CENTER);

        metodos1.add(buscado1);

        LDoble.add(metodos1, java.awt.BorderLayout.CENTER);

        Lista1.setLayout(new java.awt.BorderLayout(5, 5));

        tableListaDoble = new javax.swing.JTable(){
            public boolean isCellEditable(int rowIndex, int colIndex){
                return false;
            }
        };
        tableListaDoble.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
            },
            new String [] {
                "CÃ³digo", "Nombre", "Apellido", "Edad"
            }
        ));
        tableListaDoble.getTableHeader().setReorderingAllowed(false);
        tableListaDoble.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableListaDobleMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(tableListaDoble);

        Lista1.add(jScrollPane4, java.awt.BorderLayout.CENTER);

        LDoble.add(Lista1, java.awt.BorderLayout.PAGE_END);

        jTabbedPane1.addTab("Lista Doble", LDoble);

        LCircular.setLayout(new java.awt.BorderLayout());

        Lista2.setLayout(new java.awt.BorderLayout(5, 5));

        tableCircular = new javax.swing.JTable(){
            public boolean isCellEditable(int rowIndex, int colIndex){
                return false;
            }
        };
        tableCircular.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
            },
            new String [] {
                "CÃ³digo", "Nombre", "Apellido", "Edad"
            }
        ));
        tableCircular.getTableHeader().setReorderingAllowed(false);
        tableCircular.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableCircularMouseClicked(evt);
            }
        });
        jScrollPane5.setViewportView(tableCircular);

        Lista2.add(jScrollPane5, java.awt.BorderLayout.CENTER);

        LCircular.add(Lista2, java.awt.BorderLayout.PAGE_END);

        metodos2.setLayout(new java.awt.GridLayout(1, 2, 5, 5));

        jPanel12.setLayout(new java.awt.BorderLayout());

        jLabel19.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel19.setText("INSERTAR");
        jPanel12.add(jLabel19, java.awt.BorderLayout.PAGE_START);

        botones2.setLayout(new java.awt.GridLayout(2, 2, 5, 5));

        btnInsertarPrimeroC.setText("Insertar Inicio");
        btnInsertarPrimeroC.setEnabled(false);
        btnInsertarPrimeroC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInsertarPrimeroCActionPerformed(evt);
            }
        });
        botones2.add(btnInsertarPrimeroC);

        btnInsertarFinalC.setText("Insertar Final");
        btnInsertarFinalC.setEnabled(false);
        btnInsertarFinalC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInsertarFinalCActionPerformed(evt);
            }
        });
        botones2.add(btnInsertarFinalC);

        btnEliminarInicioC.setText("Eliminar Inicio");
        btnEliminarInicioC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarInicioCActionPerformed(evt);
            }
        });
        botones2.add(btnEliminarInicioC);

        btnEliminarFinalC.setText("Eliminar Final");
        btnEliminarFinalC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarFinalCActionPerformed(evt);
            }
        });
        botones2.add(btnEliminarFinalC);

        jPanel12.add(botones2, java.awt.BorderLayout.PAGE_END);

        inputs2.setLayout(new java.awt.GridLayout(4, 2, 4, 5));

        jLabel20.setText("CÃ³digo");
        inputs2.add(jLabel20);

        txtCodigoC.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        txtCodigoC.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCodigoCKeyTyped(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtCodigoCKeyReleased(evt);
            }
        });
        inputs2.add(txtCodigoC);

        jLabel21.setText("Nombre");
        inputs2.add(jLabel21);

        txtNombreC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNombreCActionPerformed(evt);
            }
        });
        txtNombreC.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNombreCKeyTyped(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtNombreCKeyReleased(evt);
            }
        });
        inputs2.add(txtNombreC);

        jLabel22.setText("Apellido");
        inputs2.add(jLabel22);

        txtApellidoC.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtApellidoCKeyTyped(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtApellidoCKeyReleased(evt);
            }
        });
        inputs2.add(txtApellidoC);

        jLabel23.setText("Edad");
        inputs2.add(jLabel23);

        txtEdadC.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtEdadCKeyTyped(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtEdadCKeyReleased(evt);
            }
        });
        inputs2.add(txtEdadC);

        jPanel12.add(inputs2, java.awt.BorderLayout.CENTER);

        metodos2.add(jPanel12);

        buscado2.setLayout(new java.awt.BorderLayout(5, 5));

        jLabel24.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel24.setText("Elemento Buscado");
        buscado2.add(jLabel24, java.awt.BorderLayout.PAGE_START);

        btnEliminarBuscadoC.setText("Eliminar Elemento Buscado");
        btnEliminarBuscadoC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarBuscadoCActionPerformed(evt);
            }
        });
        buscado2.add(btnEliminarBuscadoC, java.awt.BorderLayout.PAGE_END);

        jPanel13.setLayout(new java.awt.GridLayout(2, 0, 0, 5));

        jPanel14.setLayout(new java.awt.GridLayout(2, 0, 0, 5));

        jPanel15.setLayout(new java.awt.GridLayout(1, 2, 5, 5));

        jLabel25.setText("CÃ³digo");
        jPanel15.add(jLabel25);

        txtCodigoBC.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCodigoBCKeyTyped(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtCodigoBCKeyReleased(evt);
            }
        });
        jPanel15.add(txtCodigoBC);

        jPanel14.add(jPanel15);

        btnBuscarC.setText("Buscar");
        btnBuscarC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarCActionPerformed(evt);
            }
        });
        jPanel14.add(btnBuscarC);

        jPanel13.add(jPanel14);

        jPanel16.setLayout(new java.awt.GridLayout(2, 2, 5, 5));

        btnInsertarAntesC.setText("Insertar Antes");
        btnInsertarAntesC.setEnabled(false);
        btnInsertarAntesC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInsertarAntesCActionPerformed(evt);
            }
        });
        jPanel16.add(btnInsertarAntesC);

        btnInsertarDespuesC.setText("Insertar Despues");
        btnInsertarDespuesC.setEnabled(false);
        btnInsertarDespuesC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInsertarDespuesCActionPerformed(evt);
            }
        });
        jPanel16.add(btnInsertarDespuesC);

        btnEliminarAntesC.setText("Eliminar Antes");
        btnEliminarAntesC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarAntesCActionPerformed(evt);
            }
        });
        jPanel16.add(btnEliminarAntesC);

        btnEliminarDespuesC.setText("Eliminar Despues");
        btnEliminarDespuesC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarDespuesCActionPerformed(evt);
            }
        });
        jPanel16.add(btnEliminarDespuesC);

        jPanel13.add(jPanel16);

        buscado2.add(jPanel13, java.awt.BorderLayout.CENTER);

        metodos2.add(buscado2);

        LCircular.add(metodos2, java.awt.BorderLayout.CENTER);

        jTabbedPane1.addTab("Lista Circular", LCircular);

        jPanel1.add(jTabbedPane1, java.awt.BorderLayout.CENTER);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void txtNombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNombreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNombreActionPerformed

    private void txtNombreDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNombreDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNombreDActionPerformed

    private void txtNombreCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNombreCActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNombreCActionPerformed

    private void btnInsertarPrimeroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInsertarPrimeroActionPerformed
        try {
            //obtener los datos
            String codigo = txtCodigo.getText();
            String nombre = txtNombre.getText();
            String apellido = txtApellido.getText();
            int edad = Integer.parseInt(txtEdad.getText());
            //verificamos codigo 8 digitos y la edad mayor 10
            verificarCodigoEdad(codigo, edad);
            //crear al objeto
            Estudiante estudiante = new Estudiante(codigo, nombre, apellido, edad);
            System.out.println("--------------------------Insertar por el primero-----------------------------------------");
            estudiantes.insertarPrimero(estudiante);
            System.out.println(estudiantes);
            //imprimir tabla
            imprimirjTable();
            //limpiar
            limpiarCampos();
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage(), "Error", ERROR_MESSAGE);
            System.out.println(e);
        }
        
    }//GEN-LAST:event_btnInsertarPrimeroActionPerformed
    
    
    private void txtCodigoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCodigoKeyTyped
        // limitar q solo se ingrese numeros
        char caracter = evt.getKeyChar();
        // Verificar si la tecla pulsada no es un digito
        if(((caracter < '0') ||
           (caracter > '9')) &&
           (caracter != '\b' /*corresponde a BACK_SPACE*/)){
            evt.consume();
        }
        if (txtCodigo.getText().length()== 8){
            evt.consume();
        } 
    
    }//GEN-LAST:event_txtCodigoKeyTyped

    private void txtEdadKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtEdadKeyTyped
        // TODO add your handling code here:
        // limitar q solo se ingrese numeros
        char caracter = evt.getKeyChar();
        // Verificar si la tecla pulsada no es un digito
        if(((caracter < '0') ||
           (caracter > '9')) &&
           (caracter != '\b' /*corresponde a BACK_SPACE*/)){
            evt.consume();
        }
        if (txtEdad.getText().length()== 2){
            evt.consume();
        } 
    }//GEN-LAST:event_txtEdadKeyTyped

    private void txtCodigoDKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCodigoDKeyTyped
        // limitar q solo se ingrese numeros
        char caracter = evt.getKeyChar();
        // Verificar si la tecla pulsada no es un digito
        if(((caracter < '0') ||
           (caracter > '9')) &&
           (caracter != '\b' /*corresponde a BACK_SPACE*/)){
            evt.consume();
        }
        if (txtCodigoD.getText().length()== 8){
            evt.consume();
        } 
    }//GEN-LAST:event_txtCodigoDKeyTyped

    private void txtEdadDKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtEdadDKeyTyped
        // limitar q solo se ingrese numeros
        char caracter = evt.getKeyChar();
        // Verificar si la tecla pulsada no es un digito
        if(((caracter < '0') ||
           (caracter > '9')) &&
           (caracter != '\b' /*corresponde a BACK_SPACE*/)){
            evt.consume();
        }
        if (txtEdadD.getText().length()== 2){
            evt.consume();
        } 
    }//GEN-LAST:event_txtEdadDKeyTyped

    private void txtCodigoCKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCodigoCKeyTyped
        // limitar q solo se ingrese numeros
        char caracter = evt.getKeyChar();
        // Verificar si la tecla pulsada no es un digito
        if(((caracter < '0') ||
           (caracter > '9')) &&
           (caracter != '\b' /*corresponde a BACK_SPACE*/)){
            evt.consume();
        }
        if (txtCodigoC.getText().length()== 8){
            evt.consume();
        } 
    }//GEN-LAST:event_txtCodigoCKeyTyped

    private void txtEdadCKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtEdadCKeyTyped
        // limitar q solo se ingrese numeros
        char caracter = evt.getKeyChar();
        // Verificar si la tecla pulsada no es un digito
        if(((caracter < '0') ||
           (caracter > '9')) &&
           (caracter != '\b' /*corresponde a BACK_SPACE*/)){
            evt.consume();
        }
        if (txtEdadC.getText().length()== 2){
            evt.consume();
        } 
    }//GEN-LAST:event_txtEdadCKeyTyped

    private void txtCodigoBCKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCodigoBCKeyTyped
        // limitar q solo se ingrese numeros
        char caracter = evt.getKeyChar();
        // Verificar si la tecla pulsada no es un digito
        if(((caracter < '0') ||
           (caracter > '9')) &&
           (caracter != '\b' /*corresponde a BACK_SPACE*/)){
            evt.consume();
        }
        if (txtCodigoBC.getText().length()== 8){
            evt.consume();
        } 
    }//GEN-LAST:event_txtCodigoBCKeyTyped

    private void txtCodigoBDKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCodigoBDKeyTyped
        // limitar q solo se ingrese numeros
        char caracter = evt.getKeyChar();
        // Verificar si la tecla pulsada no es un digito
        if(((caracter < '0') ||
           (caracter > '9')) &&
           (caracter != '\b' /*corresponde a BACK_SPACE*/)){
            evt.consume();
        }
        if (txtCodigoBD.getText().length()== 8){
            evt.consume();
        } 
    }//GEN-LAST:event_txtCodigoBDKeyTyped

    private void txtCodigoBKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCodigoBKeyTyped
    
        // limitar q solo se ingrese numeros
        char caracter = evt.getKeyChar();
        // Verificar si la tecla pulsada no es un digito
        if(((caracter < '0') ||
           (caracter > '9')) &&
           (caracter != '\b' /*corresponde a BACK_SPACE*/)){
            evt.consume();
        }
        if (txtCodigoB.getText().length()== 8){
            evt.consume();
        } 
    }//GEN-LAST:event_txtCodigoBKeyTyped

    private void tableListaSimpleFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tableListaSimpleFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_tableListaSimpleFocusGained

    private void btnInsertarFinalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInsertarFinalActionPerformed
        try {
            //obtener los datos
            String codigo = txtCodigo.getText();
            String nombre = txtNombre.getText();
            String apellido = txtApellido.getText();
            int edad = Integer.parseInt(txtEdad.getText());
            //verificamos codigo 8 digitos y la edad mayor 10
            verificarCodigoEdad(codigo, edad);
            //crear al objeto
            Estudiante estudiante = new Estudiante(codigo, nombre, apellido, edad);
            System.out.println("--------------------------Insertar por el Final-----------------------------------------");
            estudiantes.insertarFinal(estudiante);
            System.out.println(estudiantes);
            //imprimir tabla
            imprimirjTable();
            //limpiar
            limpiarCampos();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage(), "Error", ERROR_MESSAGE);
            System.out.println(e);
        }
    }//GEN-LAST:event_btnInsertarFinalActionPerformed

    private void btnEliminarPrimeroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarPrimeroActionPerformed
        // TODO add your handling code here:
        try {
                System.out.println("-----------------------------Eliminar por el primero---------------------------------------");
                estudiantes.eliminarPrimero();
                System.out.println(estudiantes);

                //imprimir tabla
                imprimirjTable();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage(), "Error", ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnEliminarPrimeroActionPerformed

    private void btnEliminarFinalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarFinalActionPerformed
        // TODO add your handling code here:
        try {
                System.out.println("-----------------------------Eliminar por el Final---------------------------------------");
                estudiantes.eliminarFinal();
                System.out.println(estudiantes);

                //imprimir tabla
                imprimirjTable();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage(), "Error", ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnEliminarFinalActionPerformed

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed

        try {
            // obtener el codigo ingresado
            String codigo = txtCodigoB.getText();
            verificarCodigoB(codigo);
            Estudiante datoB = new Estudiante(codigo, "", "", 0);
            Estudiante e1 = estudiantes.getElementoBuscado(datoB);

            Object [][] data = new Object[1][4];
            data[0][0]= e1.getCodigo();
            data[0][1]= e1.getNombre();
            data[0][2]= e1.getApellido();
            data[0][3]= e1.getEdad();


            tableListaSimple.setModel(new javax.swing.table.DefaultTableModel(
                data,
                new String [] {
                    "CÃ³digo", "Nombre", "Apellido", "Edad"
                }
            ));
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage(), "Error", ERROR_MESSAGE);
        }
        
    }//GEN-LAST:event_btnBuscarActionPerformed

    private void btnInsertarAntesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInsertarAntesActionPerformed
        // TODO add your handling code here:
        try {          
            //obtener los datos del alumno a ingresar
            String codigo = txtCodigo.getText();
            String nombre = txtNombre.getText();
            String apellido = txtApellido.getText();
            int edad = Integer.parseInt(txtEdad.getText());
            String datoB = txtCodigoB.getText();
            //verificar todos los datos
            verificarCodigoEdad(codigo, edad);
            verificarCodigoB(datoB);
            //obtener el datoBuscado
            Estudiante estudianteB = new Estudiante(datoB, "", "", 0);
            //crear al objeto
            Estudiante estudiante = new Estudiante(codigo, nombre, apellido, edad);
            //agregamos a la lista
            System.out.println("-----------------------Insertar Antes Elemento Buscado---------------------------------");
            estudiantes.insertarAntesElementoBuscado(estudiante, estudianteB);
            System.out.println(estudiantes);
            //imprimir tabla
            imprimirjTable();
            //limpiar el formulario
            limpiarCampos();
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage(), "Error", ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnInsertarAntesActionPerformed

    private void txtCodigoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCodigoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCodigoActionPerformed

    private void btnInsertarPrimeroCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInsertarPrimeroCActionPerformed
        try {
            //obtener los datos
            String codigo = txtCodigoC.getText();
            String nombre = txtNombreC.getText();
            String apellido = txtApellidoC.getText();
            int edad = Integer.parseInt(txtEdadC.getText());

            //verificar todos los datos
            verificarCodigoEdad(codigo,edad);
            //crear objeto
            Estudiante estudiante = new Estudiante(codigo, nombre, apellido, edad);
            System.out.println("--------------------------Insertar por el primero LCircular-----------------------------------------");
            estudiantesC.insertarPrimero(estudiante);
            System.out.println(estudiantesC);

            //imprimir tabla
            imprimirjTableC();

            //limpiar campos
            limpiarCamposC();
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage(), "Error", ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnInsertarPrimeroCActionPerformed

    private void btnInsertarPrimeroDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInsertarPrimeroDActionPerformed
        try {
            //obtener los datos
            String codigo = txtCodigoD.getText();
            String nombre = txtNombreD.getText();
            String apellido = txtApellidoD.getText();
            int edad = Integer.parseInt(txtEdadD.getText());

            //verificar
            verificarCodigoEdad(codigo, edad);
            //crear al objeto
            Estudiante estudiante = new Estudiante(codigo, nombre, apellido, edad);
            System.out.println("--------------------------Insertar por el primero LD-----------------------------------------");
            estudiantesD.insertarPrimero(estudiante);
            System.out.println(estudiantesD);

            //imprimir tabla
            imprimirjTableD();
            //limpiar campos
            limpiarCamposD();
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage(), "Error", ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnInsertarPrimeroDActionPerformed

    private void btnInsertarFinalDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInsertarFinalDActionPerformed
        try {
            //obtener los datos
            String codigo = txtCodigoD.getText();
            String nombre = txtNombreD.getText();
            String apellido = txtApellidoD.getText();
            int edad = Integer.parseInt(txtEdadD.getText());

            //verificar
            verificarCodigoEdad(codigo, edad);
            //crear al objeto
            Estudiante estudiante = new Estudiante(codigo, nombre, apellido, edad);
            //agregamos a la lista
            System.out.println("-----------------------Insertar por el final Doble---------------------------------");
            estudiantesD.insertarFinal(estudiante);
            System.out.println(estudiantesD);

            //imprimir tabla
            imprimirjTableD();
            //LIMPIAR CAMPOS
            limpiarCamposD();
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage(), "Error", ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnInsertarFinalDActionPerformed

    private void btnEliminarPrimeroDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarPrimeroDActionPerformed
        try {
                System.out.println("-----------------------------Eliminar por el primero Doble---------------------------------------");
                estudiantesD.eliminarPrimero();
                System.out.println(estudiantesD);

                //imprimir tabla
                imprimirjTableD();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage(), "Error", ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnEliminarPrimeroDActionPerformed

    private void btnEliminarFinalDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarFinalDActionPerformed
        try {
                System.out.println("-----------------------------Eliminar por el Final Doble---------------------------------------");
                estudiantesD.eliminarFinal();
                System.out.println(estudiantesD);

                //imprimir tabla
                imprimirjTableD();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage(), "Error", ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnEliminarFinalDActionPerformed

    private void btnInsertarFinalCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInsertarFinalCActionPerformed
        try {
            //obtener los datos
            String codigo = txtCodigoC.getText();
            String nombre = txtNombreC.getText();
            String apellido = txtApellidoC.getText();
            int edad = Integer.parseInt(txtEdadC.getText());

            //verificar todos los datos
            verificarCodigoEdad(codigo,  edad);
            //crear al objeto
            Estudiante estudiante = new Estudiante(codigo, nombre, apellido, edad);
            //agregamos a la lista
            System.out.println("-----------------------Insertar por el final Circular---------------------------------");
            estudiantesC.insertarFinal(estudiante);
            System.out.println(estudiantesC);

            //imprimir tabla
            imprimirjTableC();

            //LIMPIAR CAMPOS
            limpiarCamposC();
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage(), "Error", ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnInsertarFinalCActionPerformed

    private void btnEliminarInicioCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarInicioCActionPerformed
        try {
                System.out.println("-----------------------------Eliminar por el primero Circular---------------------------------------");
                estudiantesC.eliminarPrimero();
                System.out.println(estudiantesC);

                //imprimir tabla
                imprimirjTableC();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage(), "Error", ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnEliminarInicioCActionPerformed

    private void btnEliminarFinalCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarFinalCActionPerformed
        try {
                System.out.println("-----------------------------Eliminar por el Final Circular---------------------------------------");
                estudiantesC.eliminarFinal();
                System.out.println(estudiantesC);

                //imprimir tabla
                imprimirjTableC();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage(), "Error", ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnEliminarFinalCActionPerformed

    private void tableListaSimpleMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableListaSimpleMouseClicked
        // TODO add your handling code here:
        int select = tableListaSimple.rowAtPoint(evt.getPoint());
        txtCodigoB.setText(String.valueOf(tableListaSimple.getValueAt(select, 0)));
    }//GEN-LAST:event_tableListaSimpleMouseClicked

    private void txtCodigoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCodigoKeyReleased
        // TODO add your handling code here:
        habilitarInsertarS();
        habilitarInsertarAntesS();
    }//GEN-LAST:event_txtCodigoKeyReleased

    private void txtNombreKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNombreKeyReleased
        habilitarInsertarS();
        habilitarInsertarAntesS();
    }//GEN-LAST:event_txtNombreKeyReleased

    private void txtApellidoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtApellidoKeyReleased
        habilitarInsertarS();
        habilitarInsertarAntesS();
    }//GEN-LAST:event_txtApellidoKeyReleased

    private void txtEdadKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtEdadKeyReleased
        habilitarInsertarS();
        habilitarInsertarAntesS();
    }//GEN-LAST:event_txtEdadKeyReleased

    private void txtCodigoBKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCodigoBKeyReleased
        habilitarInsertarAntesS();
    }//GEN-LAST:event_txtCodigoBKeyReleased

    private void btnInsertarDespuesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInsertarDespuesActionPerformed
        try {          
            //obtener los datos del alumno a ingresar
            String codigo = txtCodigo.getText();
            String nombre = txtNombre.getText();
            String apellido = txtApellido.getText();
            int edad = Integer.parseInt(txtEdad.getText());
            String datoB = txtCodigoB.getText();
            //verificar todos los datos
            verificarCodigoEdad(codigo, edad);
            verificarCodigoB(datoB);
            //obtener el datoBuscado
            Estudiante estudianteB = new Estudiante(datoB, "", "", 0);
            //crear al objeto
            Estudiante estudiante = new Estudiante(codigo, nombre, apellido, edad);
            //agregamos a la lista
            System.out.println("-----------------------Insertar Despues Elemento Buscado---------------------------------");
            estudiantes.insertarDespuesElementoBuscado(estudiante,estudianteB);
            System.out.println(estudiantes);
            //imprimir tabla
            imprimirjTable();
            //limpiar el formulario
            limpiarCampos();
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage(), "Error", ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnInsertarDespuesActionPerformed

    private void txtCodigoBInputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_txtCodigoBInputMethodTextChanged
        
    }//GEN-LAST:event_txtCodigoBInputMethodTextChanged

    private void btnEliminarAntesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarAntesActionPerformed
        try {          
            String datoB = txtCodigoB.getText();
            //verificar datoB
            verificarCodigoB(datoB);
            //obtener el datoBuscado
            Estudiante estudianteB = new Estudiante(datoB, "", "", 0);
            //Eliminamos
            System.out.println("-----------------------Eliminar Antes Elemento Buscado---------------------------------");
            estudiantes.eliminarAntesElementoBuscado(estudianteB);
            System.out.println(estudiantes);
            //imprimir tabla
            imprimirjTable();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage(), "Error", ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnEliminarAntesActionPerformed

    private void btnEliminarDespuesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarDespuesActionPerformed
        try {          
            String datoB = txtCodigoB.getText();
            //verificar datoB
            verificarCodigoB(datoB);
            //obtener el datoBuscado
            Estudiante estudianteB = new Estudiante(datoB, "", "", 0);
            //Eliminamos
            System.out.println("-----------------------Eliminar Despues Elemento Buscado---------------------------------");
            estudiantes.eliminarDespuesElementoBuscado(estudianteB);
            System.out.println(estudiantes);
            //imprimir tabla
            imprimirjTable();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage(), "Error", ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnEliminarDespuesActionPerformed

    private void btnEliminarBuscadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarBuscadoActionPerformed
        try {          
            String datoB = txtCodigoB.getText();
            //verificar datoB
            verificarCodigoB(datoB);
            //obtener el datoBuscado
            Estudiante estudianteB = new Estudiante(datoB, "", "", 0);
            //Eliminamos
            System.out.println("-----------------------Eliminar Elemento Buscado---------------------------------");
            estudiantes.eliminarElementoBuscado(estudianteB);
            System.out.println(estudiantes);
            //imprimir tabla
            imprimirjTable();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage(), "Error", ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnEliminarBuscadoActionPerformed

    private void txtCodigoDKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCodigoDKeyReleased
        habilitarInsertarD();
        habilitarInsertarAntesD();
    }//GEN-LAST:event_txtCodigoDKeyReleased

    private void txtNombreDKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNombreDKeyReleased
        habilitarInsertarD();
        habilitarInsertarAntesD();
    }//GEN-LAST:event_txtNombreDKeyReleased

    private void txtApellidoDKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtApellidoDKeyReleased
        habilitarInsertarD();
        habilitarInsertarAntesD();
    }//GEN-LAST:event_txtApellidoDKeyReleased

    private void txtEdadDKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtEdadDKeyReleased
        habilitarInsertarD();
        habilitarInsertarAntesD();
    }//GEN-LAST:event_txtEdadDKeyReleased

    private void txtCodigoBDKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCodigoBDKeyReleased
        habilitarInsertarAntesD();
    }//GEN-LAST:event_txtCodigoBDKeyReleased

    private void txtNombreKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNombreKeyTyped
        // limitar q solo se ingrese letras
        char caracter = evt.getKeyChar();
        // Verificar si la tecla pulsada no es un digito
        if(((caracter >= '0') &&
           (caracter <= '9'))){
            evt.consume();
        }
    }//GEN-LAST:event_txtNombreKeyTyped

    private void txtApellidoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtApellidoKeyTyped
        // limitar q solo se ingrese letras
        char caracter = evt.getKeyChar();
        // Verificar si la tecla pulsada no es un digito
        if(((caracter >= '0') &&
           (caracter <= '9'))){
            evt.consume();
        }
    }//GEN-LAST:event_txtApellidoKeyTyped

    private void txtNombreDKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNombreDKeyTyped
        // limitar q solo se ingrese letras
        char caracter = evt.getKeyChar();
        // Verificar si la tecla pulsada no es un digito
        if(((caracter >= '0') &&
           (caracter <= '9'))){
            evt.consume();
        }
    }//GEN-LAST:event_txtNombreDKeyTyped

    private void txtApellidoDKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtApellidoDKeyTyped
        // limitar q solo se ingrese letras
        char caracter = evt.getKeyChar();
        // Verificar si la tecla pulsada no es un digito
        if(((caracter >= '0') &&
           (caracter <= '9'))){
            evt.consume();
        }
    }//GEN-LAST:event_txtApellidoDKeyTyped

    private void txtNombreCKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNombreCKeyTyped
        // limitar q solo se ingrese letras
        char caracter = evt.getKeyChar();
        // Verificar si la tecla pulsada no es un digito
        if(((caracter >= '0') &&
           (caracter <= '9'))){
            evt.consume();
        }
    }//GEN-LAST:event_txtNombreCKeyTyped

    private void txtApellidoCKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtApellidoCKeyTyped
        // limitar q solo se ingrese letras
        char caracter = evt.getKeyChar();
        // Verificar si la tecla pulsada no es un digito
        if(((caracter >= '0') &&
           (caracter <= '9'))){
            evt.consume();
        }
    }//GEN-LAST:event_txtApellidoCKeyTyped

    private void btnInsertarAntesDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInsertarAntesDActionPerformed
        try {          
            //obtener los datos del alumno a ingresar
            String codigo = txtCodigoD.getText();
            String nombre = txtNombreD.getText();
            String apellido = txtApellidoD.getText();
            int edad = Integer.parseInt(txtEdadD.getText());
            String datoB = txtCodigoBD.getText();
            //verificar todos los datos
            verificarCodigoEdad(codigo, edad);
            verificarCodigoB(datoB);
            //obtener el datoBuscado
            Estudiante estudianteB = new Estudiante(datoB, "", "", 0);
            //crear al objeto
            Estudiante estudiante = new Estudiante(codigo, nombre, apellido, edad);
            //agregamos a la lista
            System.out.println("-----------------------Insertar Antes Elemento Buscado Doble---------------------------------");
            estudiantesD.insertarAntesElementoB(estudiante,estudianteB);
            System.out.println(estudiantesD);
            //imprimir tabla
            imprimirjTableD();
            //limpiar el formulario
            limpiarCamposD();
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage(), "Error", ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnInsertarAntesDActionPerformed

    private void btnInsertarDespuesDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInsertarDespuesDActionPerformed
        try {          
            //obtener los datos del alumno a ingresar
            String codigo = txtCodigoD.getText();
            String nombre = txtNombreD.getText();
            String apellido = txtApellidoD.getText();
            int edad = Integer.parseInt(txtEdadD.getText());
            String datoB = txtCodigoBD.getText();
            //verificar todos los datos
            verificarCodigoEdad(codigo, edad);
            verificarCodigoB(datoB);
            //obtener el datoBuscado
            Estudiante estudianteB = new Estudiante(datoB, "", "", 0);
            //crear al objeto
            Estudiante estudiante = new Estudiante(codigo, nombre, apellido, edad);
            //agregamos a la lista
            System.out.println("-----------------------Insertar Despues Elemento Buscado Doble---------------------------------");
            estudiantesD.insertarDespuesElementoB(estudiante,estudianteB);
            System.out.println(estudiantesD);
            //imprimir tabla
            imprimirjTableD();
            //limpiar el formulario
            limpiarCamposD();
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage(), "Error", ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnInsertarDespuesDActionPerformed

    private void btnBuscarDobleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarDobleActionPerformed
        try {
            // obtener el codigo ingresado
            String codigo = txtCodigoBD.getText();
            verificarCodigoB(codigo);
            Estudiante datoB = new Estudiante(codigo, "", "", 0);
            Estudiante e1 = estudiantesD.getElementoBuscado(datoB);

            Object [][] data = new Object[1][4];
            data[0][0]= e1.getCodigo();
            data[0][1]= e1.getNombre();
            data[0][2]= e1.getApellido();
            data[0][3]= e1.getEdad();


            tableListaDoble.setModel(new javax.swing.table.DefaultTableModel(
                data,
                new String [] {
                    "CÃ³digo", "Nombre", "Apellido", "Edad"
                }
            ));
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage(), "Error", ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnBuscarDobleActionPerformed

    private void tableListaDobleMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableListaDobleMouseClicked
        int select = tableListaDoble.rowAtPoint(evt.getPoint());
        txtCodigoBD.setText(String.valueOf(tableListaDoble.getValueAt(select, 0)));
    }//GEN-LAST:event_tableListaDobleMouseClicked

    private void btnEliminarAntesDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarAntesDActionPerformed
        try {          
            String datoB = txtCodigoBD.getText();
            //verificar datoB
            verificarCodigoB(datoB);
            //obtener el datoBuscado
            Estudiante estudianteB = new Estudiante(datoB, "", "", 0);
            //Eliminamos
            System.out.println("-----------------------Eliminar Antes Elemento Buscado Doble---------------------------------");
            estudiantesD.eliminarAntesElementoB(estudianteB);
            System.out.println(estudiantesD);
            //imprimir tabla
            imprimirjTableD();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage(), "Error", ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnEliminarAntesDActionPerformed

    private void btnELiminarDespuesDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnELiminarDespuesDActionPerformed
        try {          
            String datoB = txtCodigoBD.getText();
            //verificar datoB
            verificarCodigoB(datoB);
            //obtener el datoBuscado
            Estudiante estudianteB = new Estudiante(datoB, "", "", 0);
            //Eliminamos
            System.out.println("-----------------------Eliminar Despues Elemento Buscado Doble---------------------------------");
            estudiantesD.eliminarDespuesElementoB(estudianteB);
            System.out.println(estudiantesD);
            //imprimir tabla
            imprimirjTableD();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage(), "Error", ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnELiminarDespuesDActionPerformed

    private void btnEliminarBuscadoDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarBuscadoDActionPerformed
        try {          
            String datoB = txtCodigoBD.getText();
            //verificar datoB
            verificarCodigoB(datoB);
            //obtener el datoBuscado
            Estudiante estudianteB = new Estudiante(datoB, "", "", 0);
            //Eliminamos
            System.out.println("-----------------------Eliminar Elemento Buscado Doble---------------------------------");
            estudiantesD.eliminarElementoBuscado(estudianteB);
            System.out.println(estudiantesD);
            //imprimir tabla
            imprimirjTableD();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage(), "Error", ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnEliminarBuscadoDActionPerformed

    private void txtCodigoCKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCodigoCKeyReleased
        habilitarInsertarC();
        habilitarInsertarAntesC();
    }//GEN-LAST:event_txtCodigoCKeyReleased

    private void txtNombreCKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNombreCKeyReleased
        habilitarInsertarC();
        habilitarInsertarAntesC();
    }//GEN-LAST:event_txtNombreCKeyReleased

    private void txtApellidoCKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtApellidoCKeyReleased
        habilitarInsertarC();
        habilitarInsertarAntesC();
    }//GEN-LAST:event_txtApellidoCKeyReleased

    private void txtEdadCKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtEdadCKeyReleased
        habilitarInsertarC();
        habilitarInsertarAntesC();
    }//GEN-LAST:event_txtEdadCKeyReleased

    private void txtCodigoBCKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCodigoBCKeyReleased
        habilitarInsertarAntesC();
    }//GEN-LAST:event_txtCodigoBCKeyReleased

    private void btnBuscarCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarCActionPerformed
        try {
            // obtener el codigo ingresado
            String codigo = txtCodigoBC.getText();
            verificarCodigoB(codigo);
            Estudiante datoB = new Estudiante(codigo, "", "", 0);
            Estudiante e1 = estudiantesC.getElementoBuscado(datoB);

            Object [][] data = new Object[1][4];
            data[0][0]= e1.getCodigo();
            data[0][1]= e1.getNombre();
            data[0][2]= e1.getApellido();
            data[0][3]= e1.getEdad();


            tableCircular.setModel(new javax.swing.table.DefaultTableModel(
                data,
                new String [] {
                    "CÃ³digo", "Nombre", "Apellido", "Edad"
                }
            ));
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage(), "Error", ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnBuscarCActionPerformed

    private void btnInsertarAntesCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInsertarAntesCActionPerformed
        try {          
            //obtener los datos del alumno a ingresar
            String codigo = txtCodigoC.getText();
            String nombre = txtNombreC.getText();
            String apellido = txtApellidoC.getText();
            int edad = Integer.parseInt(txtEdadC.getText());
            String datoB = txtCodigoBC.getText();
            //verificar todos los datos
            verificarCodigoEdad(codigo, edad);
            verificarCodigoB(datoB);
            //obtener el datoBuscado
            Estudiante estudianteB = new Estudiante(datoB, "", "", 0);
            //crear al objeto
            Estudiante estudiante = new Estudiante(codigo, nombre, apellido, edad);
            //agregamos a la lista
            System.out.println("-----------------------Insertar Antes Elemento Buscado Circular---------------------------------");
            estudiantesC.insertarAntesElementoB(estudiante,estudianteB);
            System.out.println(estudiantesC);
            //imprimir tabla
            imprimirjTableC();
            //limpiar el formulario
            limpiarCamposC();
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage(), "Error", ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnInsertarAntesCActionPerformed

    private void btnInsertarDespuesCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInsertarDespuesCActionPerformed
         try {          
            //obtener los datos del alumno a ingresar
            String codigo = txtCodigoC.getText();
            String nombre = txtNombreC.getText();
            String apellido = txtApellidoC.getText();
            int edad = Integer.parseInt(txtEdadC.getText());
            String datoB = txtCodigoBC.getText();
            //verificar todos los datos
            verificarCodigoEdad(codigo, edad);
            verificarCodigoB(datoB);
            //obtener el datoBuscado
            Estudiante estudianteB = new Estudiante(datoB, "", "", 0);
            //crear al objeto
            Estudiante estudiante = new Estudiante(codigo, nombre, apellido, edad);
            //agregamos a la lista
            System.out.println("-----------------------Insertar Despues Elemento Buscado Circular---------------------------------");
            estudiantesC.insertarDespuesElementoB(estudiante,estudianteB);
            System.out.println(estudiantesC);
            //imprimir tabla
            imprimirjTableC();
            //limpiar el formulario
            limpiarCamposC();
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage(), "Error", ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnInsertarDespuesCActionPerformed

    private void btnEliminarAntesCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarAntesCActionPerformed
        try {          
            String datoB = txtCodigoBC.getText();
            //verificar datoB
            verificarCodigoB(datoB);
            //obtener el datoBuscado
            Estudiante estudianteB = new Estudiante(datoB, "", "", 0);
            //Eliminamos
            System.out.println("-----------------------Eliminar Antes Elemento Buscado CIRCULAR---------------------------------");
            estudiantesC.eliminarAntesElementoB(estudianteB);
            System.out.println(estudiantesC);
            //imprimir tabla
            imprimirjTableC();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage(), "Error", ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnEliminarAntesCActionPerformed

    private void btnEliminarDespuesCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarDespuesCActionPerformed
        try {          
            String datoB = txtCodigoBC.getText();
            //verificar datoB
            verificarCodigoB(datoB);
            //obtener el datoBuscado
            Estudiante estudianteB = new Estudiante(datoB, "", "", 0);
            //Eliminamos
            System.out.println("-----------------------Eliminar Despues Elemento Buscado CIRCULAR---------------------------------");
            estudiantesC.eliminarDespuesElementoB(estudianteB);
            System.out.println(estudiantesC);
            //imprimir tabla
            imprimirjTableC();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage(), "Error", ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnEliminarDespuesCActionPerformed

    private void btnEliminarBuscadoCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarBuscadoCActionPerformed
        try {          
            String datoB = txtCodigoBC.getText();
            //verificar datoB
            verificarCodigoB(datoB);
            //obtener el datoBuscado
            Estudiante estudianteB = new Estudiante(datoB, "", "", 0);
            //Eliminamos
            System.out.println("-----------------------Eliminar Elemento Buscado Circular---------------------------------");
            estudiantesC.eliminarElementoBuscado(estudianteB);
            System.out.println(estudiantesC);
            //imprimir tabla
            imprimirjTableC();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage(), "Error", ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnEliminarBuscadoCActionPerformed

    private void tableCircularMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableCircularMouseClicked
        int select = tableCircular.rowAtPoint(evt.getPoint());
        txtCodigoBC.setText(String.valueOf(tableCircular.getValueAt(select, 0)));
    }//GEN-LAST:event_tableCircularMouseClicked
    
    
    private void limpiarCampos(){
        txtCodigo.setText("");
        txtNombre.setText("");
        txtApellido.setText("");
        txtEdad.setText("");
        btnInsertarPrimero.setEnabled(false);
        btnInsertarFinal.setEnabled(false);
        btnInsertarAntes.setEnabled(false);
        btnInsertarDespues.setEnabled(false);
    }
    private void limpiarCamposD(){
        txtCodigoD.setText("");
        txtNombreD.setText("");
        txtApellidoD.setText("");
        txtEdadD.setText("");
        btnInsertarPrimeroD.setEnabled(false);
        btnInsertarFinalD.setEnabled(false);
        btnInsertarAntesD.setEnabled(false);
        btnInsertarDespuesD.setEnabled(false);
    }
    private void limpiarCamposC(){
        txtCodigoC.setText("");
        txtNombreC.setText("");
        txtApellidoC.setText("");
        txtEdadC.setText("");
        btnInsertarPrimeroC.setEnabled(false);
        btnInsertarFinalC.setEnabled(false);
        btnInsertarAntesC.setEnabled(false);
        btnInsertarDespuesC.setEnabled(false);
    }
    
    private void imprimirjTable(){
        int filas = estudiantes.getTamanio();
        Object [][] data = new Object[filas][4];
        for (int i = 0; i < filas ; i++) {
            Estudiante e1 = estudiantes.getDatoIndex(i);
            data[i][0]= e1.getCodigo();
            data[i][1]= e1.getNombre();
            data[i][2]= e1.getApellido();
            data[i][3]= e1.getEdad();
        }
        tableListaSimple.setModel(new javax.swing.table.DefaultTableModel(
            data,
            new String [] {
                "CÃ³digo", "Nombre", "Apellido", "Edad"
            }
        ));
    }
    
    private void imprimirjTableD(){
        int filas = estudiantesD.getTamanio();
        Object [][] data = new Object[filas][4];
        for (int i = 0; i < filas ; i++) {
            Estudiante e1 = estudiantesD.getDatoIndex(i);
            data[i][0]= e1.getCodigo();
            data[i][1]= e1.getNombre();
            data[i][2]= e1.getApellido();
            data[i][3]= e1.getEdad();
        }

        tableListaDoble.setModel(new javax.swing.table.DefaultTableModel(
            data,
            new String [] {
                "CÃ³digo", "Nombre", "Apellido", "Edad"
            }
        ));
            
        
    }
    
    private void imprimirjTableC(){
        int filas = estudiantesC.getTamanio();
        
        Object [][] data = new Object[filas][4];

        for (int i = 0; i < filas ; i++) {
            Estudiante e1 = estudiantesC.getDatoIndex(i);
            data[i][0]= e1.getCodigo();
            data[i][1]= e1.getNombre();
            data[i][2]= e1.getApellido();
            data[i][3]= e1.getEdad();
        }

        tableCircular.setModel(new javax.swing.table.DefaultTableModel(
            data,
            new String [] {
                "CÃ³digo", "Nombre", "Apellido", "Edad"
            }
        ));
        
    }
    // Verificaciones
    private void verificarCodigoEdad(String codigo, int edad) throws Exception{
        if (codigo.length() != 8) {
            throw new Exception("El codigo debe ser de 8 dÃ­gitos");
        }else if(edad < 10){
            throw new Exception("La edad debe ser mayor a 10 aÃ±os");
        }
    }
    private void verificarCodigoB(String codigoB) throws Exception{
        if (codigoB.length() != 8) {
            throw new Exception("El codigo Buscado debe ser de 8 dÃ­gitos");
        }
    }
    //hablitar botones
    // lista simple
    private void habilitarInsertarS(){
        if (!txtCodigo.getText().isEmpty() && !txtNombre.getText().isEmpty() 
                && !txtApellido.getText().isEmpty() && !txtEdad.getText().isEmpty()) {
            btnInsertarPrimero.setEnabled(true);
            btnInsertarFinal.setEnabled(true);
        }else{
            btnInsertarPrimero.setEnabled(false);
            btnInsertarFinal.setEnabled(false);
        }
    }
    private void habilitarInsertarAntesS(){
        if (!txtCodigo.getText().isEmpty() && !txtNombre.getText().isEmpty() 
                && !txtApellido.getText().isEmpty() && !txtEdad.getText().isEmpty() && !txtCodigoB.getText().isEmpty()) {
            btnInsertarAntes.setEnabled(true);
            btnInsertarDespues.setEnabled(true);
        }else{
            btnInsertarAntes.setEnabled(false);
            btnInsertarDespues.setEnabled(false);
        }
    }
    
    private void habilitarInsertarD(){
        if (!txtCodigoD.getText().isEmpty() && !txtNombreD.getText().isEmpty() 
                && !txtApellidoD.getText().isEmpty() && !txtEdadD.getText().isEmpty()) {
            btnInsertarPrimeroD.setEnabled(true);
            btnInsertarFinalD.setEnabled(true);
        }else{
            btnInsertarPrimeroD.setEnabled(false);
            btnInsertarFinalD.setEnabled(false);
        }
    }
    private void habilitarInsertarAntesD(){
        if (!txtCodigoD.getText().isEmpty() && !txtNombreD.getText().isEmpty() 
                && !txtApellidoD.getText().isEmpty() && !txtEdadD.getText().isEmpty() && !txtCodigoBD.getText().isEmpty()) {
            btnInsertarAntesD.setEnabled(true);
            btnInsertarDespuesD.setEnabled(true);
        }else{
            btnInsertarAntesD.setEnabled(false);
            btnInsertarDespuesD.setEnabled(false);
        }
    }
    
    private void habilitarInsertarC(){
        if (!txtCodigoC.getText().isEmpty() && !txtNombreC.getText().isEmpty() 
                && !txtApellidoC.getText().isEmpty() && !txtEdadC.getText().isEmpty()) {
            btnInsertarPrimeroC.setEnabled(true);
            btnInsertarFinalC.setEnabled(true);
        }else{
            btnInsertarPrimeroC.setEnabled(false);
            btnInsertarFinalC.setEnabled(false);
        }
    }
    
    private void habilitarInsertarAntesC(){
        if (!txtCodigoC.getText().isEmpty() && !txtNombreC.getText().isEmpty() 
                && !txtApellidoC.getText().isEmpty() && !txtEdadC.getText().isEmpty() && !txtCodigoBC.getText().isEmpty()) {
            btnInsertarAntesC.setEnabled(true);
            btnInsertarDespuesC.setEnabled(true);
        }else{
            btnInsertarAntesC.setEnabled(false);
            btnInsertarDespuesC.setEnabled(false);
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new Main().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel LCircular;
    private javax.swing.JPanel LDoble;
    private javax.swing.JPanel LSimple;
    private javax.swing.JPanel Lista;
    private javax.swing.JPanel Lista1;
    private javax.swing.JPanel Lista2;
    private javax.swing.JLabel Titulo;
    private javax.swing.JPanel botones;
    private javax.swing.JPanel botones1;
    private javax.swing.JPanel botones2;
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnBuscarC;
    private javax.swing.JButton btnBuscarDoble;
    private javax.swing.JButton btnELiminarDespuesD;
    private javax.swing.JButton btnEliminarAntes;
    private javax.swing.JButton btnEliminarAntesC;
    private javax.swing.JButton btnEliminarAntesD;
    private javax.swing.JButton btnEliminarBuscado;
    private javax.swing.JButton btnEliminarBuscadoC;
    private javax.swing.JButton btnEliminarBuscadoD;
    private javax.swing.JButton btnEliminarDespues;
    private javax.swing.JButton btnEliminarDespuesC;
    private javax.swing.JPanel btnEliminarDespuesD;
    private javax.swing.JButton btnEliminarFinal;
    private javax.swing.JButton btnEliminarFinalC;
    private javax.swing.JButton btnEliminarFinalD;
    private javax.swing.JButton btnEliminarInicioC;
    private javax.swing.JButton btnEliminarPrimero;
    private javax.swing.JButton btnEliminarPrimeroD;
    private javax.swing.JButton btnInsertarAntes;
    private javax.swing.JButton btnInsertarAntesC;
    private javax.swing.JButton btnInsertarAntesD;
    private javax.swing.JButton btnInsertarDespues;
    private javax.swing.JButton btnInsertarDespuesC;
    private javax.swing.JButton btnInsertarDespuesD;
    private javax.swing.JButton btnInsertarFinal;
    private javax.swing.JButton btnInsertarFinalC;
    private javax.swing.JButton btnInsertarFinalD;
    private javax.swing.JButton btnInsertarPrimero;
    private javax.swing.JButton btnInsertarPrimeroC;
    private javax.swing.JButton btnInsertarPrimeroD;
    private javax.swing.JPanel buscado;
    private javax.swing.JPanel buscado1;
    private javax.swing.JPanel buscado2;
    private javax.swing.JLabel footer;
    private javax.swing.JPanel inputs;
    private javax.swing.JPanel inputs1;
    private javax.swing.JPanel inputs2;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLabel margenD;
    private javax.swing.JLabel margenI;
    private javax.swing.JPanel metodos;
    private javax.swing.JPanel metodos1;
    private javax.swing.JPanel metodos2;
    private javax.swing.JTable tableCircular;
    private javax.swing.JTable tableListaDoble;
    private javax.swing.JTable tableListaSimple;
    private javax.swing.JTextField txtApellido;
    private javax.swing.JTextField txtApellidoC;
    private javax.swing.JTextField txtApellidoD;
    private javax.swing.JTextField txtCodigo;
    private javax.swing.JTextField txtCodigoB;
    private javax.swing.JTextField txtCodigoBC;
    private javax.swing.JTextField txtCodigoBD;
    private javax.swing.JTextField txtCodigoC;
    private javax.swing.JTextField txtCodigoD;
    private javax.swing.JTextField txtEdad;
    private javax.swing.JTextField txtEdadC;
    private javax.swing.JTextField txtEdadD;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JTextField txtNombreC;
    private javax.swing.JTextField txtNombreD;
    // End of variables declaration//GEN-END:variables
}
